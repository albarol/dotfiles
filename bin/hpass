#!/usr/bin/env bash

GREEN="\e[32m"
RED="\e[31m"
DIM="\e[2m"
BOLD="\e[1m"
NC="\e[0m"

SUCCESS=0
NO_ARGUMENT=1
EXIT=2


message_help() {
printf  "\
\$ hpass [comand] [arguments]

${BOLD}Usage:${NC}
 hpass ${GREEN}user${NC}  <site>
 hpass ${GREEN}pass${NC}  <site>

${BOLD}Commands:${NC}
 ${GREEN}user${NC}   Create hash user based on site.
 ${GREEN}pass${NC}   Create hash password based on site.

${BOLD}Options:${NC}
${GREEN}--h${NC}elp     Display this help.
"
}


process_user() {
  if [[ $# -ne 1 ]]; then
    printf "${RED}Usage: hpass user <site> ${NC}\n"
    exit 1
  fi

  printf "$1" | openssl dgst -sha256 -r | openssl dgst -sha1 -r | head -c 10
  exit 0
}


process_pass() {
  if [[ $# -ne 1 ]]; then
    printf "${RED}Usage: hpass pass <site> ${NC}\n"
    exit 1
  fi

  printf "Master Password: ";
  PASSWD=$(read -s password; printf $password)

  printf "*$PASSWD+$1*" | openssl dgst -sha1 -r | awk -F ' ' '{print $1}'
}

process_commands() {
    local cmd=$1
    shift

    case $cmd in
        u|user) process_user $@;;
        p|pass) process_pass $@;;
        *) message_help;;
    esac
}


if [[ "${@:-1}" = "--help" ]] && [[ "$#" -eq 1 ]]; then
    message_help && exit 0
elif [[ "$#" -ge 1 ]]; then
    process_commands $@
else
    message_help && exit 0
fi

