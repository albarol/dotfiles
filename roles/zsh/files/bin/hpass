#!/usr/bin/env python3

import argparse
import sys
import hashlib
import getpass
import base64


def main(argv=None):
  parser = argparse.ArgumentParser(
    prog="hpass",
    description="Hash password generator",
    epilog=""
  )

  subparsers = parser.add_subparsers(required=True)

  user_cmd = subparsers.add_parser('user')
  user_cmd.add_argument('--dns', required=True, help="dns name; e.g: google.com")
  user_cmd.add_argument('--size', default=10, type=int, help="name size")
  user_cmd.set_defaults(func=exec_user)

  passw_cmd = subparsers.add_parser('pass')
  passw_cmd.add_argument('--dns', required=True, help="dns name; e.g: google.com")
  passw_cmd.add_argument('-s', '--size', default=12, type=int, help="password size")
  passw_cmd.add_argument('-x', '--special', action="store_true", dest="special", help="include special characters")
  passw_cmd.set_defaults(func=exec_password)

  try:
    args = parser.parse_args(argv[1:] or ['-h'])
    args.func(args)
  except (TypeError, KeyboardInterrupt):
    parser.print_help()


def exec_user(args):
  user = args.dns.encode('utf8')
  user = hashlib.sha1(user).hexdigest()
  print(user[:args.size])


def exec_password(args):
  mpassw = getpass.getpass(prompt="Master password: ")
  passw = f'{mpassw}:{args.dns}'
  passw = passw.encode('utf8')
  passw = base64.b64encode(hashlib.sha1(passw).digest())

  passw = passw[:args.size].decode('utf8')

  if args.special:
    symbols = ["*", "!"]
    result = []
    for idx, letter in enumerate(passw):
      if idx > 0 and idx % 7 == 0:
        letter = symbols[idx & 1]
      result.append(letter)
    passw = ''.join(result)

  print(passw)


if __name__ == '__main__':
  main(sys.argv)
